class counselingdata:
    
    def __init__(self, session_id, session_date, service, session_status, counselor_name, advisor_name, student_name, session_notes, follow_up, next_appointment):

        #Public
        self.session_id = session_id

        #Private  
        self.__counselor_name = counselor_name
        self.__advisor_name = advisor_name
        self.__student_name = student_name
        self.__session_notes = session_notes


        #Protected
        self._session_date = session_date
        self._service = service
        self._session_status = session_status
        self._follow_up = follow_up
        self._next_appointment = next_appointment


#PUBLIC
    def get_session_id(self):
        return self.session_id

    def set_session_id(self, session_id):
        if session_id.startswith("CD") and len(session_id) == 8 and session_id[2:].isdigit():
            self.session_id = session_id
        else:
            raise ValueError("Invalid Session ID")


#PRIVATE

    def get_counselor_name(self):  
        return self.__counselor_name

    def get_advisor_name(self):
        return self.__advisor_name  

    def get_student_name(self):
        return self.__student_name  

    def view_session_notes(self):
        return self.__session_notes

#PROTECTED
    def get_session_date(self):
        return self._session_date

    def get_service(self):
        return self._service

    def get_session_status(self):
        return self._session_status

    def update_session_status(self, new_session_status):
        self._session_status = new_session_status

    def get_follow_up(self):
        return self._follow_up

    def update_follow_up(self, new_follow_up):
        self._follow_up = new_follow_up
    
    def get_next_appointment(self):
        return self._next_appointment

    def update_next_appointment(self, updated_next_appointment):
        self._next_appointment = updated_next_appointment
